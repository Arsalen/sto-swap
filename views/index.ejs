<html>
  <head>
    <title><%= title %></title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" type="text/css" href="styles.css" />
    <script src="https://cdn.jsdelivr.net/npm/magic-sdk/dist/magic.js"></script>

    <script>

      const magic = new Magic("<%= MAGIC_PUBLISHABLE_KEY %>");

      const serverUrl = window.location.href;

      const render = async () => {

        let defaultHtml = `
            <div class="container">
              <h1>Atomic swap</h1>
            </div>
        `;

        let indexHtml = `
          <h1>Please signup or login</h1>
          <form onsubmit="handleLogin(event)">
            <input type="email" name="email" required="required" placeholder="Enter your email" />
            <button type="submit">Send</button>
          </form>
        `;

        let res = await fetch(`${serverUrl}user/`);

        if (res.status == 200) {

          let userData = await res.json();

          homeHtml = `
            <h2>${userData.email}</h2>
            <button><a href="${serverUrl}dai">DAI</a></button>
            <button><a href="${serverUrl}usdt">USDT</a></button>
            <button><a href="${serverUrl}usdc">USDC</a></button>
            <button onclick="handleLogout()">Logout</button>
          `;

          document.getElementById("app").innerHTML = defaultHtml + homeHtml;
        } else {

          document.getElementById("app").innerHTML = defaultHtml + indexHtml;
        }
      };

      const handleLogin = async e => {

        e.preventDefault();

        const email = new FormData(e.target).get("email");

        if (email) {

          const didToken = await magic.auth.loginWithMagicLink({ email });

          await fetch(`${serverUrl}user/login`, {

            headers: new Headers({
              Authorization: "Bearer " + didToken
            }),
            withCredentials: true,
            credentials: "same-origin",
            method: "POST"
          });

          render();
        }
      };

      const handleLogout = async () => {

        await fetch(`${serverUrl}user/logout`, { method: "POST" });
        
        render();
      };

    </script>

  </head>
  <body onload="render()">
    <div id="app">loading...</div>
  </body>
</html>
